#!/usr/bin/env python3

import os
import signal
import sys
import subprocess

# pylint: disable=import-error
from manga_archiver import cli, ma

# pylint: enable=import-error

def handle_sigint(signum, frame):
    signal.signal(signal.SIGINT, original_sigint)

    try:
        if input("\nReally quit? (y/n)> ").lower().startswith("y"):
            sys.exit(1)
    except KeyboardInterrupt:
        print("Quitting")
        sys.exit(1)


def check_for_programs():
    missing = []
    # try:
    #     subprocess.Popen(
    #         ["foo"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL
    #     )
    # except OSError:
    #     missing.append("foo")

    if missing:
        m = ", ".join(['"{0}"'.format(m) for m in missing])
        print(f"error: missing required program(s) {m}")
        return 1
    return 0


def main():
    if check_for_programs() != 0:
        return 1
    return ma.main(cli.parse_args(sys.argv[1:]))


if __name__ == "__main__":
    original_sigint = signal.getsignal(signal.SIGINT)
    signal.signal(signal.SIGINT, handle_sigint)
    sys.exit(main())
